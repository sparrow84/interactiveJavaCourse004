/*
    Worker
    1. Создать класс «Сотрудник» с полями: ФИО, должность, email, телефон, зарплата, возраст;

    Worker
    2. Конструктор класса должен заполнять эти поля при создании объекта;

    Worker
    3. Внутри класса «Сотрудник» написать метод, который выводит информацию об объекте в консоль;

    Main
    4. Создать массив из 5 сотрудников:
        Пример:
            Person[] persArray = new Person[5];
            // Вначале объявляем массив объектов
            persArray[0] = new Person("Ivanov Ivan", "Engineer", " ivivan@mailbox.com ", "892312312", 30000, 30);
            // потом для каждой ячейки массива задаем объект
            persArray[1] = new Person(...); ... persArray[4] = new Person(...);
            С помощью цикла вывести информацию только о сотрудниках старше 40 лет;

    6. Создать классы Собака и Кот с наследованием от класса Животное;

    7. Животные могут выполнять действия: бежать, плыть, перепрыгивать препятствие.
        В качестве параметра каждому методу передается величина, означающая или длину препятствия
        (для бега и плавания), или высоту (для прыжков);

    8. У каждого животного есть ограничения на действия
        (бег: кот – 200 м., собака – 500 м.;
        прыжок: кот – 2 м., собака – 0.5 м.;
        плавание: кот не умеет плавать, собака – 10 м.);

    9. При попытке животного выполнить одно из этих действий,
        оно должно сообщить результат в консоль.
        (Например, dog1.run(150); -> результат: run: true);

    10. Добавить животным разброс в ограничениях.
        То есть у одной собаки ограничение на бег может быть 400 м., у другой – 600 м.
 */


package com.company;

public class Main {

    public static void main(String[] args) {

// Task 4
        Worker[] workerArray = new Worker[6];

        workerArray[0] = new Worker("Каценеленбоген Борис Эрнстович",  "Генеральный директор",   "Kacenelenbogen@yopmail.com","32452345345",1000000,24);
        workerArray[1] = new Worker("Шишкарёв Архип Святославович",    "Исполнительный директор","SHishkaryov@yopmail.com",   "56785678567",100000, 31);
        workerArray[2] = new Worker("Койначёнока Диана Афанасиевна",   "Финансовый директор",    "Kojnachyonoka@yopmail.com", "13451234324",10000,  35);
        workerArray[3] = new Worker("Курбонмамадов Афанасий Федорович","Коммерческий директор",  "Kurbonmamadov@yopmail.com", "45634756878",1000,   56);
        workerArray[4] = new Worker("Каменчука Евдокия Степановна",    "Директор по персоналу",  "Kamenchuka@yopmail.com",    "06879567845",100,    42);
        workerArray[5] = new Worker("Ядыкин Герман Эдуардович",        "Уборщик",                "YAdykin@yopmail.com",       "43356786887",10,     84);

        for (Worker w : workerArray) {
            if (w.getAge() > 40) w.printWorker();
        }

// Task 6 - 10

        Dog dog1 = new Dog("Шарик");
        Cat cat1 = new Cat("Васька");

        dog1.jump(1);
        dog1.run(50);
        dog1.swim(10);

        dog1.jump(200);
        dog1.run(5000);
        dog1.swim(1000);

        cat1.jump(1.5);
        cat1.run(10);

        cat1.jump(10.5);
        cat1.run(100);
    }
}

